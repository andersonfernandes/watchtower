{
  "openapi": "3.0.0",
  "info": {
    "version": "v1.0.0",
    "title": "Watchtower",
    "description": ""
  },
  "servers": [
    {
      "url": "http://localhost:5000/api",
      "description": ""
    }
  ],
  "paths": {
    "/health/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/areas/": {
      "get": {
        "tags": [
          "Areas"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/schemas/AreaResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Areas"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/schemas/AreaResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/schemas/CreateAreaRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/schemas/CreateAreaRequest"
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/schemas/UserLoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "in": "body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/schemas/UserLoginRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/schemas/UserLoginRequest"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "schemas": {
    "AreaId": {
      "description": "Identifier type for public.areas",
      "allOf": [
        {
          "type": "object",
          "properties": {
            "__brand": {
              "type": "string",
              "const": "AreasId"
            }
          },
          "required": [
            "__brand"
          ]
        },
        {
          "type": "string"
        }
      ]
    },
    "Area": {
      "description": "Represents the table public.areas",
      "type": "object",
      "properties": {
        "id": {
          "description": "Identifier type for public.areas",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "__brand": {
                  "type": "string",
                  "const": "AreasId"
                }
              },
              "required": [
                "__brand"
              ]
            },
            {
              "type": "string"
            }
          ]
        },
        "name": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "created_at",
        "id",
        "name",
        "updated_at"
      ]
    },
    "AreasInitializer": {
      "description": "Represents the initializer for the table public.areas",
      "type": "object",
      "properties": {
        "id": {
          "description": "Default value: gen_random_uuid()",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "__brand": {
                  "type": "string",
                  "const": "AreasId"
                }
              },
              "required": [
                "__brand"
              ]
            },
            {
              "type": "string"
            }
          ]
        },
        "name": {
          "type": "string"
        },
        "created_at": {
          "description": "Default value: CURRENT_TIMESTAMP",
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "description": "Default value: CURRENT_TIMESTAMP",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "name"
      ]
    },
    "AreasMutator": {
      "description": "Represents the mutator for the table public.areas",
      "type": "object",
      "properties": {
        "id": {
          "description": "Identifier type for public.areas",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "__brand": {
                  "type": "string",
                  "const": "AreasId"
                }
              },
              "required": [
                "__brand"
              ]
            },
            {
              "type": "string"
            }
          ]
        },
        "name": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CreateAreaRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "AreaResponse": {
      "description": "Represents the table public.areas",
      "type": "object",
      "properties": {
        "id": {
          "description": "Identifier type for public.areas",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "__brand": {
                  "type": "string",
                  "const": "AreasId"
                }
              },
              "required": [
                "__brand"
              ]
            },
            {
              "type": "string"
            }
          ]
        },
        "name": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "created_at",
        "id",
        "name",
        "updated_at"
      ]
    },
    "UserId": {
      "description": "Identifier type for public.users",
      "allOf": [
        {
          "type": "object",
          "properties": {
            "__brand": {
              "type": "string",
              "const": "UsersId"
            }
          },
          "required": [
            "__brand"
          ]
        },
        {
          "type": "string"
        }
      ]
    },
    "User": {
      "description": "Represents the table public.users",
      "type": "object",
      "properties": {
        "id": {
          "description": "Identifier type for public.users",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "__brand": {
                  "type": "string",
                  "const": "UsersId"
                }
              },
              "required": [
                "__brand"
              ]
            },
            {
              "type": "string"
            }
          ]
        },
        "name": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "created_at",
        "id",
        "name",
        "password",
        "updated_at",
        "username"
      ]
    },
    "UsersInitializer": {
      "description": "Represents the initializer for the table public.users",
      "type": "object",
      "properties": {
        "id": {
          "description": "Default value: gen_random_uuid()",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "__brand": {
                  "type": "string",
                  "const": "UsersId"
                }
              },
              "required": [
                "__brand"
              ]
            },
            {
              "type": "string"
            }
          ]
        },
        "name": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "created_at": {
          "description": "Default value: CURRENT_TIMESTAMP",
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "description": "Default value: CURRENT_TIMESTAMP",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "name",
        "password",
        "username"
      ]
    },
    "UsersMutator": {
      "description": "Represents the mutator for the table public.users",
      "type": "object",
      "properties": {
        "id": {
          "description": "Identifier type for public.users",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "__brand": {
                  "type": "string",
                  "const": "UsersId"
                }
              },
              "required": [
                "__brand"
              ]
            },
            {
              "type": "string"
            }
          ]
        },
        "name": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "UserLoginRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "required": [
        "password",
        "username"
      ]
    },
    "UserLoginResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      },
      "required": [
        "token"
      ]
    },
    "UserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Identifier type for public.users",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "__brand": {
                  "type": "string",
                  "const": "UsersId"
                }
              },
              "required": [
                "__brand"
              ]
            },
            {
              "type": "string"
            }
          ]
        },
        "name": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "created_at",
        "id",
        "name",
        "updated_at",
        "username"
      ]
    },
    "UserJWTPayload": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        }
      },
      "required": [
        "userId"
      ]
    }
  }
}